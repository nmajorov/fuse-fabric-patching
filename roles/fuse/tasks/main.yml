---


- name: copy the fuse archive
  copy: 
    src='{{ fuse_archive }}'
    dest='{{ fuse_user_home }}'

- name: detect fuse installation
  stat: 
    path='{{ fuse_path }}'
  register: install_path

- name: unarchive fuse
  unarchive: 
    src='{{ fuse_user_home }}/{{ fuse_archive}}'
    dest='{{ fuse_user_home }}'
    owner='{{ fuse_user }}'
    group='{{ fuse_group }}'
    copy=no
  when: install_path.stat.exists is defined and install_path.stat.exists == False

- name: add fuse admin user
  lineinfile: 
    dest='{{ fuse_path }}/etc/users.properties'
    regexp='^{{ fuse_admin }}={{ fuse_admin_pass }},admin'
    insertafter='^#admin=admin'
    line='{{ fuse_admin }}={{ fuse_admin_pass }},admin'
    state=present
  when: install_path.stat.exists is defined and install_path.stat.exists == False

- name: Install unit file
 # sudo: true
  template: src=fuse.service.j2 dest=/etc/systemd/system/fuse.service owner=root mode=644
  notify:
    - reload systemd
    - restart fuse


#- name: detect fuse service
#  stat: 
#    path='{{ fuse_path }}/bin/fuse-service'
#  register: service_path

#- name: configure service wrapper
#  include: wrapper.yml
#  when: service_path.stat.exists == False
