---

- name: verify fuse ssh console
  wait_for: port=8101 host=localhost delay=10


- name: set jolokia uri
  set_fact: 
    jolokia_uri='http://{{ inventory_hostname }}:8181/jolokia'

- name: detect fabric
  local_action: uri 
    url='{{ jolokia_uri }}/exec/io.fabric8:type=Fabric/containerIds()'
    user=admin
    password=admin
    return_content=yes
  become: no
  ignore_errors: yes
  register: output

- name: query for containers
  set_fact: 
    containers="{{ (output.content | from_json).value }}"
  when: output.status is defined and output.status == 200

- name: create fabric
  command: "{{ fuse_client_invocation}} 'fabric:create --zookeeper-password admin '"
  become: true
  become_user: '{{ fuse_user }}'
  become_flags: '-i' # enable login
  when: "inventory_hostname == play_hosts[0] and (containers is not defined or 'root' not in containers)"
  register: leader

- name: wait for fuse to stop
  wait_for: port=8101 host=localhost delay=10 state=stopped
  when: "leader|changed"

- name: verify fuse ssh console
  wait_for: port=8101 host=localhost delay=10
  when: "leader|changed"

- name: craate ssh first container
  command: "{{ fuse_client_invocation}} 'container-create-ssh --host node1 --user {{ fuse_user }} --password {{fuse_user_pass}} --zookeeper-password admin ssh-container1'"
  become: yes
  become_user: '{{ fuse_user }}'
  become_flags: '-i'

- name: wait for containers
  pause: minutes=1

- name: create ssh second container
  command: "{{ fuse_client_invocation}} 'container-create-ssh --host node2 --user {{ fuse_user }} --password {{fuse_user_pass}} --zookeeper-password admin ssh-container2'"
  become: yes
  become_user: '{{ fuse_user }}'
  become_flags: '-i'

- name: wait for containers
  pause: minutes=1

- name: form ensemble
  command: "{{ fuse_client_invocation}} 'fabric:ensemble-add --force ssh-container1 ssh-container2'"
  become: yes
  become_user: '{{ fuse_user }}'

